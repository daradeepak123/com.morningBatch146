<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-CTNIRRU" failures="0" tests="1" name="Default test" time="0.048" errors="0" timestamp="2024-01-13T09:08:51 IST">
  <testcase classname="testLearn.TestNgBasics" name="@BeforeSuite bSuite" time="0.015">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.apache.poi.xssf.usermodel.XSSFSheet.getRow(int)&amp;quot; because &amp;quot;testLearn.TestNgBasics.sheet&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.xssf.usermodel.XSSFSheet.getRow(int)" because "testLearn.TestNgBasics.sheet" is null
at testLearn.TestNgBasics.bSuite(TestNgBasics.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:317)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite bSuite -->
  <testcase classname="testLearn.TestNgBasics" name="@BeforeTest btest" time="-1.705117131494E9">
    <skipped/>
  </testcase> <!-- @BeforeTest btest -->
  <testcase classname="testLearn.TestNgBasics" name="@BeforeClass bClass" time="-1.705117131512E9">
    <skipped/>
  </testcase> <!-- @BeforeClass bClass -->
  <testcase classname="testLearn.TestClassLearn" name="@BeforeMethod beforeDashBoard" time="-1.705117131524E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeDashBoard -->
  <testcase classname="testLearn.TestClassLearn" name="@AfterMethod afterDashBoard" time="-1.705117131531E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterDashBoard -->
  <testcase classname="testLearn.TestNgBasics" name="@AfterClass aClass" time="-1.705117131535E9">
    <skipped/>
  </testcase> <!-- @AfterClass aClass -->
  <testcase classname="testLearn.TestNgBasics" name="@AfterTest aTest" time="-1.705117131539E9">
    <skipped/>
  </testcase> <!-- @AfterTest aTest -->
  <testcase classname="testLearn.TestClassLearn" name="tstLearn" time="0.0">
    <skipped/>
  </testcase> <!-- tstLearn -->
</testsuite> <!-- Default test -->
